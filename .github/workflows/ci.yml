name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        cd source/lambda-functions/image-processor
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov boto3-stubs[s3,lambda]

    - name: Run unit tests
      run: |
        cd source/lambda-functions/image-processor
        python -m pytest tests/unit/ -v --cov=lambda_function --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./source/lambda-functions/image-processor/coverage.xml
        flags: unittests
        name: codecov-umbrella

  validate-infrastructure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Terraform Format Check
      run: |
        cd infrastructure/terraform
        terraform fmt -check

    - name: Terraform Validate
      run: |
        cd infrastructure/terraform
        terraform init -backend=false
        terraform validate

    - name: Setup AWS SAM
      uses: aws-actions/setup-sam@v2

    - name: SAM Validate
      run: |
        cd infrastructure/cloudformation
        sam validate

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r source/lambda-functions/image-processor/ -f json -o bandit-report.json

    - name: Upload Bandit Report
      uses: actions/upload-artifact@v3
      with:
        name: bandit-report
        path: bandit-report.json

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install linting tools
      run: |
        pip install flake8 black isort

    - name: Run Black
      run: |
        cd source/lambda-functions/image-processor
        black --check .

    - name: Run isort
      run: |
        cd source/lambda-functions/image-processor
        isort --check-only .

    - name: Run Flake8
      run: |
        cd source/lambda-functions/image-processor
        flake8 .

  build:
    needs: [test, validate-infrastructure, security-scan, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup AWS SAM
      uses: aws-actions/setup-sam@v2

    - name: Build SAM application
      run: |
        cd infrastructure/cloudformation
        sam build

    - name: Package Lambda function
      run: |
        cd source/lambda-functions/image-processor
        zip -r ../../../lambda-function.zip . -x "tests/*" "*.pyc" "__pycache__/*"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          .aws-sam/
          lambda-function.zip

